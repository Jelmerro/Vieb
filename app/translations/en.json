{
    "actions": {
        "alreadyRecording": "Already recording, ignoring record action",
        "command": {
            "failed": "Command error:\n$1",
            "success": "Command successful!",
            "successWithOutput": "Command success:\n$1"
        },
        "rss": {
            "clipboard": "RSS feed '$1' copied to clipboard",
            "header": "--- RSS feeds on the page ---\n$1",
            "notFound": "No RSS feeds found on this page"
        },
        "toc": {
            "title": "TOC",
            "top": "TOP"
        },
        "translations": {
            "errors": {
                "deepl": "Error from Deepl: $1",
                "general": "Failed to connect to server, see console",
                "libretranslate": "Error from LibreTranslate: $1"
            }
        }
    },
    "adblocker": {
        "aborted": "Failed to update $1: Request aborted",
        "failed": "Failed to update $1:\n$2",
        "missing": "Adblocker module not present, ads will not be blocked!",
        "updated": "Updated and reloaded the latest $1 successfully",
        "updating": "Updating $1 to the latest version"
    },
    "commands": {
        "arguments": {
            "folderMissing": "Folder '$1' does not exist!"
        },
        "buffers": "$1",
        "clear": {
            "argCount": "The clear command takes exactly two arguments: a type and an interval",
            "intervalInvalid": "The clear command interval must be 'all', a valid URL or a valid interval, such as '1day', or inverted like 'last3hours'",
            "intervalMissing": "The clear command interval is required",
            "typeInvalid": "The clear command type must be one of: history",
            "typeMissing": "The clear command requires a type argument to clear"
        },
        "close": {
            "noMatch": "Can't find matching page, no tabs closed",
            "range": "Range cannot be combined with searching in close command"
        },
        "colorscheme": {
            "argCount": "The colorscheme command takes a single optional argument",
            "current": "colorscheme: $1",
            "missing": "Cannot find colorscheme '$1'"
        },
        "command": {
            "builtin": "Command can not be a built-in command: $1",
            "combined": "Can't combine ! with reading a value for editing commands",
            "duplicate": "Duplicate custom command definition (add ! to overwrite): $1",
            "list": "--- User defined commands ---\n$1",
            "listSingle": "$1 => $2",
            "missing": "Not an editor command: $1",
            "none": "There are no user defined commands",
            "slashes": "Command name cannot contain any slashes",
            "special": "Command name cannot start with a number nor special character"
        },
        "delcommand": {
            "argCount": "The delcommand command takes a exactly one argument",
            "missing": "No such user defined command: $1"
        },
        "deletepointerpos": {
            "overridePath": "Command delpointerpos! only accepts a single path",
            "toofew": "Command delpointerpos requires at least the key name",
            "toomany": "Command delpointerpos only accepts a key and an optional path"
        },
        "deletescrollpos": {
            "overridePath": "Command delscrollpos! only accepts a single path",
            "toofew": "Command delscrollpos requires at least the key name",
            "toomany": "Command delscrollpos only accepts a key and an optional path"
        },
        "delmarks": {
            "argCount": "Command delmarks! takes no arguments",
            "keyname": "Command delmarks only accepts a single keyname"
        },
        "devtools": {
            "argCount": "The devtools command takes a single optional argument",
            "invalid": "Invalid devtools position '$1' specified, must be one of: $2"
        },
        "execute": {
            "ambiguous": "Command is ambiguous, please be more specific: $1",
            "argCount": "Command takes no arguments: $1",
            "invalidJSON": "Command could not be executed, invalid JSON provided:\n$1\n$2",
            "noConfirm": "No ! allowed for: $1",
            "noRange": "Command does not accept a range: $1",
            "notFound": "Not an editor command: $1",
            "unmatched": "Command could not be executed, unmatched quotes or backslash:\n$1"
        },
        "externalcommand": {
            "missing": "No command set to open links externally, please update the 'externalcommand' setting"
        },
        "help": {
            "argCount": "The help command takes a single optional argument"
        },
        "hide": {
            "range": "Range cannot be combined with searching in hide command",
            "visible": "Only visible pages can be hidden"
        },
        "makedefault": {
            "failed": "Script to set Vieb as the default browser failed:\n$1",
            "installed": "Command only works for installed versions of Vieb",
            "other": "If you didn't get a notification to set Vieb as your default browser, please go to the OS settings for default applications to check"
        },
        "marks": {
            "argCount": "Command marks only accepts a maximum of two args",
            "list": "$1",
            "noKey": "No marks found for keys: $1",
            "none": "No marks found",
            "url": "Mark URL must be a valid URL, not: $1"
        },
        "mkviebrc": {
            "argCount": "The mkviebrc command takes a single optional argument 'full'",
            "invalid": "The only optional argument for mkviebrc is 'full', not: $1"
        },
        "mute": {
            "argCount": "Command mute! requires a single boolean argument",
            "noMatch": "Can't find a matching page, no tabs (un)muted",
            "range": "Range cannot be combined with searching in mute command"
        },
        "pin": {
            "argCount": "Command pin! requires a single boolean argument",
            "noMatch": "Can't find a matching page, no tabs (un)pinned",
            "range": "Range cannot be combined with searching in pin command"
        },
        "pointerpos": {
            "argCount": "Command pointerpos only accepts a maximum of three args",
            "list": "$1",
            "location": "Command pointerpos requires the x and y location after the key",
            "noKey": "No pointer positions found for keys: $1",
            "none": "No pointer positions found"
        },
        "ranges": {
            "combined": "Can't combine a global search with two indexes in range '$1', either supply two indexes/searches OR use a global search",
            "commas": "Too many commas in range '$1', at most 1 is allowed",
            "flags": "Range '$1' contains invalid flags",
            "indexOrSearch": "Range '$1' invalid, must have indices or a search",
            "invalid": "Range section '$1' is not a valid range"
        },
        "restoremark": {
            "argCount": "Command restoremark only accepts up to two args",
            "keyname": "Command restoremark requires at least key name as the first argument",
            "position": "Invalid mark restore position '$1', must be one of: $2"
        },
        "restorepointerpos": {
            "argCount": "Command restorepointerpos only accepts up to two args",
            "keyname": "Command restorepointerpos requires at least one key argument"
        },
        "restorescrollpos": {
            "argCount": "Command restorescrollpos only accepts up to two args",
            "keyname": "Command restorescrollpos requires at least one key argument"
        },
        "screencopy": {
            "argCount": "The screencopy command only accepts optional dimensions",
            "dimensions": "Screencopy dimensions must match 'width,height,x,y' with round numbers"
        },
        "screenshot": {
            "argCount": "The screenshot command takes only two optional arguments:\nthe location where to write the image and the dimensions",
            "dimensions": "Screenshot dimensions must match 'width,height,x,y' with round numbers",
            "failed": "Could not write the image: $1",
            "success": "Screenshot save: $1"
        },
        "scriptnames": {
            "argType": "Scriptnames! argument must be the number of a script",
            "editor": "Command to edit files with vim failed, please update the 'vimcommand' setting",
            "noArgs": "Command takes no arguments: scriptnames",
            "notFound": "No script found with index '$1', see ':scriptnames!'",
            "singleArg": "Scriptnames! takes one optional index argument"
        },
        "scrollpos": {
            "argCount": "Command scrollpos only accepts a maximum of three args",
            "list": "$1",
            "noKey": "No scroll positions found for keys: $1",
            "none": "No scroll positions found",
            "pixels": "Command scrollpos requires the pixels argument after the key, not: $1"
        },
        "settings": {
            "invalidJSON": "Invalid JSON in '$1' value:\n$2",
            "invalidStructure": "Invalid structure/type found in '$1' value:\n$2\nCan only be an object with strings, a list of strings, or a list with lists of 1 or 2 strings",
            "listSingle": "The setting '$1' has the value: $2",
            "missing": "The setting '$1' doesn't exist",
            "noChanges": "No settings have been changed compared to the default",
            "noFlipping": "The setting '$1' can not be flipped",
            "noModify": "Can't modify '$1' as if it were a number, text, list or object",
            "optionsList": "--- Options ---\n$1",
            "reserved": "This syntax is reserved for future use, but has no purpose yet."
        },
        "source": {
            "absolute": "Filename must be absolute when sourcing files at runtime",
            "argCount": "Source requires exactly one argument representing the filename",
            "missing": "Specified file could not be found: $1",
            "readError": "Read error for config file located: $1",
            "recursive": "Recursive sourcing of files is not supported",
            "startup": "It's not possible to source a file again that's already loaded on startup"
        },
        "split": {
            "range": "Range cannot be combined with searching in split command",
            "visible": "Page is already visible, cannot be put into new split"
        },
        "suspend": {
            "range": "Range cannot be combined with searching in suspend command",
            "visible": "Only tabs not currently visible can be suspended"
        },
        "translatepage": {
            "apiKey": "API key not set, see ':h translatekey' for help",
            "argCount": "Command translatepage only accepts a single optional language argument",
            "language": "Invalid language '$1' supplied, see ':h translatelang' for help"
        },
        "write": {
            "argCount": "The write command takes two optional arguments\nthe location where to write the page and a type of file",
            "combined": "Write command ranges cannot be combined with a custom location",
            "failed": "Could not save the page: $1",
            "success": "Page saved: $1",
            "type": "Write type must be one of 'html' or 'mhtml', not: $1"
        }
    },
    "contextmenu": {
        "groups": {
            "audio": "Audio",
            "frame": "Frame",
            "general": "General",
            "image": "Image",
            "link": "Link",
            "suggestions": "Suggestions",
            "text": "Text",
            "video": "Video"
        }
    },
    "downloads": {
        "failed": "Download failed:\n$1",
        "finished": "Download finished:\n$1",
        "started": "Download started:\n$1"
    },
    "mappings": {
        "defaultMapping": "No custom mappings found",
        "defaultMappingForKey": "No custom mapping found for key: $1",
        "errors": {
            "overwritten": "Mappings are always overwritten, no need for !",
            "unmapArgCount": "The $1unmap command requires exactly one mapping",
            "unmatched": "Unmatched < > in mapping '$1': $2",
            "unsupported": "Unsupported key in mapping which was skipped: $1"
        },
        "list": "$1",
        "noMappings": "No mappings found",
        "noMappingsForKey": "No mapping found for key: $1"
    },
    "pages": {
        "cookies": {
            "empty": "There are no cookies stored yet",
            "filterEmpty": "No results for current filter",
            "filterPlaceholder": "Filter domain",
            "loading": "Loading...",
            "title": "Cookies"
        },
        "downloads": {
            "clickToOpen": "Click to open",
            "loading": "Loading...",
            "nothing": "Nothing has been downloaded yet",
            "states": {
                "cancelled": "Cancelled",
                "completed": "Completed",
                "downloading": "Downloading",
                "paused": "Paused",
                "removed": "Removed",
                "waiting_to_start": "Waiting to start"
            },
            "title": "Downloads"
        },
        "failedload": {
            "otherError": "<h2>Unreachable page</h2>The page could not be loaded successfully. The following error occurred:<br><h3>$1</h3>The first step you could try is reloading the page, by default mapped to <kbd>r</kbd> in normal mode. If the error persists, make sure you typed the URL correctly. Alternatively, the website might not support the '$2' protocol. Finally, please check your internet connection and DNS settings.",
            "sslError": "<h2>Unreachable page</h2>The page could not be loaded successfully. The following error occurred:<br><h3>$1</h3>You can enable automatic HTTP redirects with <kbd>:set redirecttohttp</kbd>.<br>Alternatively, you can choose to go there just once via this HTTP link: <a href=\"$2\">$2</a><br>Finally, you can control what to do with invalid certificates by changing <kbd>permissioncertificateerror</kbd>."
        },
        "filebrowser": {
            "empty": "Empty directory",
            "permissionDenied": "Permission denied"
        },
        "help": {
            "examples": {
                "chromium": "Chromium",
                "firefox": "Firefox",
                "pentadactyl": "Pentadactyl",
                "qutebrowser": "qutebrowser",
                "sakakey": "Saka Key",
                "surfingkeys": "Surfingkeys",
                "tridactyl": "Tridactyl",
                "vimium": "Vimium",
                "vimvixen": "Vim Vixen",
                "vivaldi": "Vivaldi"
            },
            "title": "Help"
        },
        "history": {
            "filterEmpty": "No pages have been visited yet",
            "filterNoResults": "No results for current filter",
            "filterPlaceholder": "Filter history",
            "loading": "Loading...",
            "perpage": "Entries per page",
            "readingProgress": "Reading history $1/$2, currently going back to history from $3",
            "title": "History"
        },
        "newtab": {
            "favorites": "Favorites",
            "title": "Newtab",
            "topsites": "Top sites"
        },
        "notifications": {
            "clickToOpen": "Click to open",
            "empty": "There have been no notifications so far",
            "loading": "Loading...",
            "title": "Notifications"
        },
        "version": {
            "alreadyNewer": "Latest release $1 is older",
            "changelog": "changelog",
            "checkUpdate": "Check for updates",
            "description": "Vieb is made by <a href=\"https://github.com/Jelmerro\">Jelmer van Arnhem</a> and <a href=\"https://github.com/Jelmerro/Vieb/graphs/contributors\">contributors</a>. It enables you to interact with the web using Vim inspired keybindings. Vieb runs on Electron $1 and the Chromium version is $2.",
            "discussions": "discussions",
            "donate": "donate",
            "failed": "Failed to fetch updates",
            "faq": "faq",
            "homepage": "homepage",
            "latest": "Your Vieb is up to date",
            "loading": "Loading...",
            "matrix": "matrix",
            "newerFound": "New version $1 is available",
            "notChecked": "Not checked yet",
            "releases": "releases",
            "repository": "repository",
            "sponsor": "sponsor",
            "telegram": "telegram",
            "title": "Version"
        }
    },
    "permissions": {
        "ask": {
            "allowButton": "Allow",
            "body": "The page has requested access to the permission '$1'. You can allow or deny it below, and choose if you want to make this the default for the current session when sites ask for this permission in the future. For help and options, see ':h $2', ':h permissionsallowed', ':h permissionsasked' and ':h permissionsblocked'.\n\npage:\n$3",
            "bodyCertificate": "The page has a certificate error listed below. You can choose if you still want to continue visiting. Please do this after reviewing the certificate details. Because of the nature of certificates, any allowed certs will keep being trusted per domain until you restart Vieb. Changing the permission setting afterwards won't change this behavior. So while you can deny the same certificate multiple times, you only need to allow it once to be able to keep using it. For help and more options, see ':h permissioncertificateerror'.\n\npage:\n$1domain:\n$2\n\nISSUER $3\nSELF-SIGNED: $4\nSUBJECT: $5\nSTARTS: $6\nEXPIRES: $7\nFINGERPRINT: $8\n\nOnly allow certificates you have verified and can trust!",
            "bodyExternal": "The page has requested to open an external application. You can allow or deny it below, and choose if you want to make this the default for the current session when sites ask to open URLs in external programs in the future. For help and more options, see ':h permissionopenexternal', ':h permissionsallowed', ':h permissionsasked' and ':h permissionsblocked'.\n\npage:\n$2\n\nexternal:\n$3",
            "denyButton": "Deny",
            "label": "Remember for this session",
            "title": "Allow this page to access '$1'?"
        },
        "domainCachedAllowed": "Automatic domain caching rule for 'certificateerror' activated at '$1' which was allowed, because this same certificate was allowed before on this domain.",
        "notify": {
            "ask": "Automatic 'permissionsasked' rule for '$1' activated at '$2' which was $3ed manually",
            "auto": "Automatic 'permissions$1ed' rule for '$2' activated at '$3' which was $4ed",
            "global": "Globally $1ed '$2' at '$3' based on '$4'",
            "manual": "Manually $1ed '$2' at '$3'"
        }
    },
    "popups": {
        "alert": {
            "block": "Page '$1' wanted to show an alert dialog:\n$2",
            "ok": "OK",
            "title": "Alert"
        },
        "confirm": {
            "block": "Page '$1' wanted to show a confirm dialog:\n$2",
            "cancel": "Cancel",
            "ok": "OK",
            "title": "Confirm"
        },
        "login": {
            "info": "$1 said the following:\n$2",
            "password": "Password",
            "title": "Login",
            "username": "Username"
        },
        "notification": {
            "loading": "Loading...",
            "shortcuts": "SPACE/d/j: screen/page/line down, b/u/k: up, q: quit"
        },
        "prompt": {
            "block": "Page '$1' wanted to show a prompt dialog:\n$2",
            "title": "Prompt"
        }
    },
    "settings": {
        "errors": {
            "clearhistoryinterval": "clearhistoryinterval can only be set to 'none', 'session' or a valid interval such as '1day' or '3months', not: $1",
            "container": {
                "colorName": "Invalid color, must be a valid color name or hex, not: $1",
                "colorRegex": "Invalid regular expression in containercolors: $1",
                "colorSeparator": "Invalid $1 entry: $2\nEntries must have exactly one ~ to separate the name regular expression and the color name/hex",
                "invalidspecial": "Special container name for '$1' can only be one of: $2",
                "namesNewtab": "Invalid containernamesnewtab param: $1",
                "namesRegex": "Invalid regular expression in containernames: $1",
                "namesSeparator": "Invalid $1 entry: $2\nEntries must have one or two ~ to separate the regular expression, container name and newtab param",
                "namesSpecialchars": "No special characters besides underscores are allowed in the name of a container, invalid $1: $2",
                "specialchars": "No special characters besides underscores are allowed in the name of a container, invalid $1: $2"
            },
            "darkreader": {
                "blocklistRegex": "Invalid regular expression in $1: $2",
                "color": "Invalid color, must be a valid color name or hex, not: $1",
                "missing": "Darkreader module not present, can't show dark pages!"
            },
            "downloadpathIsFolder": "The downloadpath is not a directory: $1",
            "downloadpathMissing": "The downloadpath does not exist: $1",
            "favoritepages": "Invalid URL passed to favoritepages: $1",
            "fileload": "Read error for config file located at '$1'",
            "followchars": {
                "duplicate": "All followchars characters must be unique, no duplicates allowed",
                "invalidSet": "Invalid value: $1, must be any of: alpha, alphanum, dvorakhome, numbers, qwertyhome, or a custom list starting with 'custom:'",
                "notEnough": "The followchars value must be at least two characters"
            },
            "followelement": "Invalid element type passed: $1, must be any combination of: $2",
            "invalidScope": "Invalid value '$1' in '$2', must be one of: file, page or special",
            "markpersistencetype": "Invalid quickmark type passed to quickmarkpersistence: $1",
            "missing": "The setting '$1' does not exist",
            "modifiers": "Key name '$1' in modifiers is not recognized as a valid key",
            "mouseFeature": "Feature '$1' is not a valid mouse feature",
            "newtaburl": "The newtaburl value must be a valid URL or empty, not: $1",
            "numberRange": "The value of setting '$1' must be between $2 and $3",
            "oneof": "The value of setting '$1' can only be one of: $2",
            "passthrough": {
                "keyname": "Key name '$1' in passthroughkeys is not recognized as a valid key",
                "keys": "Invalid keys in passthroughkeys entry: $1",
                "regex": "Invalid regular expression in passthroughkeys: $1"
            },
            "permission": {
                "captureallowed": "Display capture permission can't be allowed, only asked or blocked",
                "hidasked": "HID permission can't be asked, only allowed or blocked",
                "mediadevicesasked": "Mediadevices permission can't be asked, only allowed or blocked",
                "name": "Invalid name for a permission: $1",
                "regex": "Invalid regular expression in permission: $1",
                "separator": "Invalid $1 entry: $2\nEntries must have at least one ~ to separate the domain regular expression and permission names",
                "serialasked": "Serial device permission can't be asked, only allowed or blocked",
                "usbasked": "USB device permission can't be asked, only allowed or blocked"
            },
            "redirect": {
                "regex": "Invalid regular expression in redirect: $1",
                "separator": "Invalid redirect entry: $1\nEntries must have exactly one ~ to separate the regular expression from the replacement"
            },
            "resources": {
                "regex": "Invalid regular expression in $1: $2",
                "type": "Invalid resource type in $1: $2"
            },
            "searchengine": {
                "replace": "Invalid searchengine value: $1\nEach URL must contain a %s parameter, which will be replaced by the search string",
                "url": "Invalid searchengine value: $1\nURL must be a valid URL"
            },
            "searchwords": {
                "duplicate": "Invalid searchwords entry: $1\nThe searchword $2 was already defined. A searchword must be defined only once",
                "separator": "Invalid searchwords entry: $1\nSearchwords before the ~ must not contain any special characters besides underscores",
                "url": "Invalid searchwords entry: $1\nURLs for searchwords must exist and must contain a %s parameter, which will be replaced by the search string"
            },
            "spelllang": "Invalid language passed to spelllang: $1",
            "sponsorblock": {
                "color": "Invalid color in sponsorblockcategories, must be a valid color name or hex, not $1",
                "duplicate": "Invalid category in sponsorblockcategories, the category '$1' was already defined. A category must be defined only once",
                "name": "Invalid category in sponsorblockcategories: $1"
            },
            "startuppages": {
                "invalidopts": "Invalid option '$1' given to startuppages, only 'muted' and 'pinned' are accepted",
                "name": "No special characters besides underscores are allowed in the name of a container, invalid startuppages container: $1",
                "toomany": "Too many options give to startuppages entry: $1",
                "url": "Invalid URL passed to startuppages: $1"
            },
            "storenewvisits": "Invalid type of history passed: $1, must be one of: $2",
            "suggestorder": {
                "duplicateCount": "Count configuration for a suggestorder entry can only be set once per entry",
                "duplicateSort": "Order configuration for a suggestorder entry can only be set once per entry",
                "empty": "Configuration for suggestorder of the type can not be empty",
                "invalidSort": "Order configuration is invalid, supported orders for $1 are: $2",
                "tilde": "Invalid suggestorder entry: $1\nEntries must have at most two ~ to separate the type from the count and the order (both are optional)",
                "type": "Invalid suggestorder type: $1\nSuggestion type must be one of: history, file or searchword"
            },
            "tocpages": "Invalid regular expression in tocpages: $1",
            "translateurl": "The translateurl value must be a valid URL, not: $1",
            "type": "The value of setting '$1' is of an incorrect type, expected '$2' but got '$3' instead",
            "unchanged": "There are no options set, no mappings changed and no custom commands that have been added, no viebrc written",
            "windowsize": {
                "format": "The $1 value must be two numbers joined with an x, such as 800x600",
                "minimum": "The windowsize value sizes must be at least 500, not $1"
            }
        },
        "files": {
            "failed": "Could not write to: $1",
            "missingloc": "No config location is known, could not write",
            "success": "$1 saved to '$2'"
        }
    },
    "util": {
        "and": " and ",
        "catchphrase": "Vim Inspired Electron Browser",
        "comma": ",",
        "commaSpaced": ", ",
        "doubleQuoteEnd": "\"",
        "doubleQuoteStart": "\"",
        "none": "",
        "or": " or ",
        "singleQuoteEnd": "'",
        "singleQuoteStart": "'",
        "untranslated": "$1"
    }
}
